import math
import numpy as np
import scipy.stats
import os
import matplotlib.pyplot as plt


def entropy(string):
        "Calculates the Shannon entropy of a string"

        # get probability of chars in string
        prob = [ float(string.count(c)) / len(string) for c in dict.fromkeys(list(string)) ]

        # calculate the entropy
        entropy = - sum([ p * math.log(p) / math.log(2.0) for p in prob ])

        return entropy



def mean_confidence_interval(data, confidence):
    a = 1.0 * np.array(data)
    print("a" ,a)
    n = len(a)
    print("n" , n)
    m, se = np.mean(a), scipy.stats.sem(a)
    print("m, se" , m , se)
    h = se * scipy.stats.t.ppf((1 + confidence) / 2., n-1)
    print("h" , h)
    return h


def bin_entropy(file):
    archivo = open(file,'rb').read()
    string = str(archivo)
    prob = [ float(string.count(c)) / len(string) for c in dict.fromkeys(list(string)) ]
    entropy = - sum([ p * math.log(p) / math.log(2.0) for p in prob ])
    return entropy




programas = os.listdir("/home/r/Semestre2020-2/malware_connections/test_small_sample")
print(programas)
entropias = []


cont = 0
for i in programas:
    path = '/home/r/Semestre2020-2/malware_connections/test_small_sample/'
    file = path + i
    entropias.append(bin_entropy(file))
    print("vamos en {}/{}".format(cont, len(programas)))
    cont+=1



#calculos de todas las propiedades de las entropias   |mar oct 20 18:15:59 -05 2020|
media_entropias = sum(entropias) / len(entropias)
print("media" , media_entropias)


var_entropias = sum([(entropia-media_entropias) **2 for entropia in entropias])/len(entropias)
print("var" , var_entropias)


desv_estandar_entropias = math.sqrt(var_entropias)
print("desv estandar:" , desv_estandar_entropias)

h_intervalo_confianza_entropias = mean_confidence_interval(entropias , 0.95)
intervalo_top = media_entropias + h_intervalo_confianza_entropias
intervalo_down = media_entropias - h_intervalo_confianza_entropias
intervalo_confianza_entropias = [intervalo_down , intervalo_top]
print("intervalos de confianza:" , intervalo_confianza_entropias)
print("\n \n \n")


x = range(0,len(programas))
y = entropias
plt.stem(x,y)
plt.show()





